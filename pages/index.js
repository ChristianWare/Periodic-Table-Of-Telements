import Head from "next/head";
import Row1 from "../src/components/Row1";
import Hulu from "../src/components/Hulu";
import Prime from "../src/components/Prime";
import Netflix from "../src/components/Netflix";
import Row8 from "../src/components/Row8";
import HBO from "../src/components/HBO";
import styles from "../styles/Home.module.css";

export default function Home({ hulu, prime, netflix, netflix2, hbo }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Periodic Table of Telements</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <h1>Periodic Table of Telements</h1>
      <small>With Next JS and CSS Grid</small>

      <Row1 />
      <Hulu hulu={hulu} />
      <Prime prime={prime} />
      <Netflix netflix={netflix} netflix2={netflix2} />
      {/* <Row8 /> */}
      <HBO hbo={hbo} />
    </div>
  );
}

export async function getStaticProps() {
  // ******* hulu start
  const res = await fetch(
    "https://streaming-availability.p.rapidapi.com/search/basic?country=us&service=prime&type=series&genre=18&page=20&output_language=en&language=en",
    {
      method: "GET",
      headers: {
        "x-rapidapi-host": "streaming-availability.p.rapidapi.com",
        "x-rapidapi-key": process.env.PRIVATE_API_KEY,
      },
    }
  );

  const hulu = await res.json();

  // ******* hulu end

  // ******* prime start
  const primeRes = await fetch(
    "https://streaming-availability.p.rapidapi.com/search/basic?country=us&service=prime&type=movie&genre=18&page=20&output_language=en&language=en",
    {
      method: "GET",
      headers: {
        "x-rapidapi-host": "streaming-availability.p.rapidapi.com",
        "x-rapidapi-key": process.env.PRIVATE_API_KEY,
      },
    }
  );

  const prime = await primeRes.json();

  // ******* prime end

  // ******* netflix start
  const netflixRes = await fetch(
    "https://streaming-availability.p.rapidapi.com/search/ultra?country=us&services=netflix%2Chulu&type=movie&order_by=imdb_vote_count&year_min=2000&year_max=2020&page=4&genres=18%2C80&genres_relation=or&desc=true&language=en&min_imdb_rating=70&max_imdb_rating=90&min_imdb_vote_count=10000&max_imdb_vote_count=1000000&output_language=en",
    {
      method: "GET",
      headers: {
        "x-rapidapi-host": "streaming-availability.p.rapidapi.com",
        "x-rapidapi-key": process.env.PRIVATE_API_KEY,
      },
    }
  );

  const netflix = await netflixRes.json();

  // ******* netflix end

  // ******* netflix 2 start
  const netflix2Res = await fetch(
    "https://streaming-availability.p.rapidapi.com/search/ultra?country=us&services=netflix&type=series&order_by=imdb_vote_count&year_min=2000&year_max=2020&page=1&genres=18%2C80&genres_relation=or&desc=true&language=en&min_imdb_rating=70&max_imdb_rating=90&min_imdb_vote_count=10000&max_imdb_vote_count=1000000&output_language=en",
    {
      method: "GET",
      headers: {
        "x-rapidapi-host": "streaming-availability.p.rapidapi.com",
        "x-rapidapi-key": process.env.PRIVATE_API_KEY,
      },
    }
  );

  const netflix2 = await netflix2Res.json();

  // ******* netflix 2 end

  // ******* HBO start
  
  const hboRes = await fetch(
    "https://streaming-availability.p.rapidapi.com/search/ultra?country=us&services=hbo&type=series&order_by=imdb_vote_count&year_min=2000&year_max=2020&page=1&genres=18%2C80&genres_relation=or&desc=true&language=en&min_imdb_rating=70&max_imdb_rating=90&min_imdb_vote_count=10000&max_imdb_vote_count=1000000&output_language=en",
    {
      method: "GET",
      headers: {
        "x-rapidapi-host": "streaming-availability.p.rapidapi.com",
        "x-rapidapi-key": process.env.PRIVATE_API_KEY,
      },
    }
  );

  const hbo = await hboRes.json();


  // ******* HBO end

  return {
    props: {
      hulu,
      prime,
      netflix,
      netflix2,
      hbo,
    },
  };
}


